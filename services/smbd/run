#!/command/with-contenv bash

{
  echo "[global]"
  echo "workgroup = $SAMBA_WORKGROUP"
  echo "server string = $SAMBA_SERVER_STRING"
  echo "server role = standalone server"
  echo "log file = /proc/1/fd/2"
  echo "log level = $SAMBA_LOG_LEVEL"
  echo "passdb backend = tdbsam"
  echo "wins support = no"
  echo "dns proxy = no"
  echo "create mask = $SAMBA_CREATE_MASK"
  echo "directory mask = $SAMBA_DIRECTORY_MASK"
  echo "load printers = no"
  echo "use sendfile = yes"
  echo "map to guest = bad user"
  echo "usershare allow guests = yes"
  echo "server min protocol = SMB2"
  echo "guest account = $SAMBA_GUEST_ACCOUNT"

  if [ "$SAMBA_INTERFACES" != "" ]; then
    echo "bind interfaces only = yes"
    echo "interfaces = $SAMBA_INTERFACES"
  fi

  if [ "$SAMBA_ALLOWED_HOSTS" != "" ]; then
    echo "hosts allow = $SAMBA_ALLOWED_HOSTS"
  fi

  if env | grep -qE '^SAMBA_SHARE_'; then
    env | awk -F= '/^SAMBA_SHARE_/ { print $1 }' | while IFS= read -r env_name; do
      share_name="$(echo "${!env_name}" | awk -F ';' '{ print $1 }')"
      share_path="$(echo "${!env_name}" | awk -F ';' '{ print $2 }')"
      share_options="$(echo "${!env_name}" | awk -F ';' '{ print $3 }')"

      echo "[$share_name]"
      echo "path = $share_path"
      echo "$share_options" | awk -F, '
        BEGIN {
          opts["veto files"] = "/._*/.DS_Store/"
          opts["delete veto files"] = "yes"
          opts["vfs objects"] = "fruit streams_xattr"
          opts["read only"] = "no"
          opts["writeable"] = "yes"
          opts["guest ok"] = "no"
          opts["browseable"] = "yes"
        } {
          for (i = 1; i <= NF; i++) {
            switch ($i) {
              case "readonly":
                opts["read only"] = "yes"
                opts["writeable"] = "no"
                break

              case "guest":
                opts["guest ok"] = "yes"
                break

              case "only guest":
                opts["guest ok"] = "yes"
                opts["guest only"] = "yes"
                break

              case /owner=/:
                _v = substr($i, index($i, "=") + 1)

                if (index(_v, ":") > 0) {
                  opts["force user"] = substr(_v, 0, index(_v, ":") - 1)
                  opts["force group"] = substr(_v, index(_v, ":") + 1)
                } else {
                  opts["force user"] = _v
                }

                break

              case /mode=/:
                _v = substr($i, index($i, "=") + 1)

                if (index(_v, ":") > 0) {
                  _f = substr(_v, 0, index(_v, ":") - 1)
                  _d = substr(_v, index(_v, ":") + 1)

                  if (_f != "") opts["force create mode"] = _f
                  if (_d != "") opts["force directory mode"] = _d
                } else {
                  opts["force create mode"] = _v
                  opts["force directory mode"] = _v
                }

                break

              case /file mask=/:
                opts["create mask"] = substr($i, index($i, "=") + 1)
                break

              case /dir mask=/:
                opts["directory mask"] = substr($i, index($i, "=") + 1)
                break

              default:
                opts[substr($i, 0, index($i, "=") - 1)] = substr($i, index($i, "=") + 1)
                break
            }
          }
        }
        END { for (k in opts) { print k " = " opts[k] } }
      '
    done
  fi
} > /etc/samba/smb.conf

# Run Samba client.
smbd -F --configfile /etc/samba/smb.conf